export const SpokeAbi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "tokenFactory_",
        type: "address",
        internalType: "contract ITokenFactory",
      },
      { name: "deployer", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addPool",
    inputs: [{ name: "poolId", type: "uint64", internalType: "PoolId" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addShareClass",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "name", type: "string", internalType: "string" },
      { name: "symbol", type: "string", internalType: "string" },
      { name: "decimals", type: "uint8", internalType: "uint8" },
      { name: "salt", type: "bytes32", internalType: "bytes32" },
      { name: "hook", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "assetToId",
    inputs: [
      { name: "asset", type: "address", internalType: "address" },
      { name: "tokenId", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "assetId", type: "uint128", internalType: "AssetId" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deny",
    inputs: [{ name: "user", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "deployVault",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
      {
        name: "factory",
        type: "address",
        internalType: "contract IVaultFactory",
      },
    ],
    outputs: [{ name: "", type: "address", internalType: "contract IVault" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "executeTransferShares",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "receiver", type: "bytes32", internalType: "bytes32" },
      { name: "amount", type: "uint128", internalType: "uint128" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "file",
    inputs: [
      { name: "what", type: "bytes32", internalType: "bytes32" },
      { name: "data", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "gateway",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IGateway" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "idToAsset",
    inputs: [{ name: "assetId", type: "uint128", internalType: "AssetId" }],
    outputs: [
      { name: "asset", type: "address", internalType: "address" },
      { name: "tokenId", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isLinked",
    inputs: [
      {
        name: "vault",
        type: "address",
        internalType: "contract IVault",
      },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isPoolActive",
    inputs: [{ name: "poolId", type: "uint64", internalType: "PoolId" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "linkToken",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      {
        name: "shareToken_",
        type: "address",
        internalType: "contract IShareToken",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "linkVault",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
      {
        name: "vault",
        type: "address",
        internalType: "contract IVault",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "markersPricePoolPerAsset",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
    ],
    outputs: [
      { name: "computedAt", type: "uint64", internalType: "uint64" },
      { name: "maxAge", type: "uint64", internalType: "uint64" },
      { name: "validUntil", type: "uint64", internalType: "uint64" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "markersPricePoolPerShare",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
    ],
    outputs: [
      { name: "computedAt", type: "uint64", internalType: "uint64" },
      { name: "maxAge", type: "uint64", internalType: "uint64" },
      { name: "validUntil", type: "uint64", internalType: "uint64" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolEscrowFactory",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPoolEscrowFactory",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pools",
    inputs: [{ name: "poolId", type: "uint64", internalType: "PoolId" }],
    outputs: [{ name: "createdAt", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pricePoolPerAsset",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
      { name: "checkValidity", type: "bool", internalType: "bool" },
    ],
    outputs: [{ name: "price", type: "uint128", internalType: "D18" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pricePoolPerShare",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "checkValidity", type: "bool", internalType: "bool" },
    ],
    outputs: [{ name: "price", type: "uint128", internalType: "D18" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pricesPoolPer",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
      { name: "checkValidity", type: "bool", internalType: "bool" },
    ],
    outputs: [
      {
        name: "pricePoolPerAsset_",
        type: "uint128",
        internalType: "D18",
      },
      {
        name: "pricePoolPerShare_",
        type: "uint128",
        internalType: "D18",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "recoverTokens",
    inputs: [
      { name: "token", type: "address", internalType: "address" },
      { name: "receiver", type: "address", internalType: "address" },
      { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "recoverTokens",
    inputs: [
      { name: "token", type: "address", internalType: "address" },
      { name: "tokenId", type: "uint256", internalType: "uint256" },
      { name: "receiver", type: "address", internalType: "address" },
      { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "registerAsset",
    inputs: [
      { name: "centrifugeId", type: "uint16", internalType: "uint16" },
      { name: "asset", type: "address", internalType: "address" },
      { name: "tokenId", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "assetId", type: "uint128", internalType: "AssetId" }],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "registerVault",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
      { name: "asset", type: "address", internalType: "address" },
      { name: "tokenId", type: "uint256", internalType: "uint256" },
      {
        name: "factory",
        type: "address",
        internalType: "contract IVaultFactory",
      },
      {
        name: "vault",
        type: "address",
        internalType: "contract IVault",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rely",
    inputs: [{ name: "user", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "request",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
      { name: "payload", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestCallback",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
      { name: "payload", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "sender",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ISpokeMessageSender",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setMaxAssetPriceAge",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
      { name: "maxPriceAge", type: "uint64", internalType: "uint64" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setMaxSharePriceAge",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "maxPriceAge", type: "uint64", internalType: "uint64" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRequestManager",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
      { name: "manager", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "shareToken",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IShareToken",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenFactory",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ITokenFactory",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferShares",
    inputs: [
      { name: "centrifugeId", type: "uint16", internalType: "uint16" },
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "receiver", type: "bytes32", internalType: "bytes32" },
      { name: "amount", type: "uint128", internalType: "uint128" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "unlinkVault",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
      {
        name: "vault",
        type: "address",
        internalType: "contract IVault",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateContract",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "target", type: "address", internalType: "address" },
      { name: "update", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updatePricePoolPerAsset",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
      {
        name: "poolPerAsset_",
        type: "uint128",
        internalType: "uint128",
      },
      { name: "computedAt", type: "uint64", internalType: "uint64" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updatePricePoolPerShare",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "price", type: "uint128", internalType: "uint128" },
      { name: "computedAt", type: "uint64", internalType: "uint64" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateRestriction",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "update", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateShareHook",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "hook", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateShareMetadata",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "name", type: "string", internalType: "string" },
      { name: "symbol", type: "string", internalType: "string" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateVault",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
      {
        name: "vaultOrFactory",
        type: "address",
        internalType: "address",
      },
      {
        name: "kind",
        type: "uint8",
        internalType: "enum VaultUpdateKind",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "vaultDetails",
    inputs: [
      {
        name: "vault",
        type: "address",
        internalType: "contract IVault",
      },
    ],
    outputs: [
      {
        name: "details",
        type: "tuple",
        internalType: "struct VaultDetails",
        components: [
          { name: "assetId", type: "uint128", internalType: "AssetId" },
          { name: "asset", type: "address", internalType: "address" },
          { name: "tokenId", type: "uint256", internalType: "uint256" },
          { name: "isLinked", type: "bool", internalType: "bool" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "wards",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "AddPool",
    inputs: [
      {
        name: "poolId",
        type: "uint64",
        indexed: true,
        internalType: "PoolId",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "AddShareClass",
    inputs: [
      {
        name: "poolId",
        type: "uint64",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "scId",
        type: "bytes16",
        indexed: true,
        internalType: "ShareClassId",
      },
      {
        name: "token",
        type: "address",
        indexed: false,
        internalType: "contract IShareToken",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Deny",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DeployVault",
    inputs: [
      {
        name: "poolId",
        type: "uint64",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "scId",
        type: "bytes16",
        indexed: true,
        internalType: "ShareClassId",
      },
      {
        name: "asset",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "factory",
        type: "address",
        indexed: false,
        internalType: "contract IVaultFactory",
      },
      {
        name: "vault",
        type: "address",
        indexed: false,
        internalType: "contract IVault",
      },
      {
        name: "kind",
        type: "uint8",
        indexed: false,
        internalType: "enum VaultKind",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ExecuteTransferShares",
    inputs: [
      {
        name: "poolId",
        type: "uint64",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "scId",
        type: "bytes16",
        indexed: true,
        internalType: "ShareClassId",
      },
      {
        name: "receiver",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint128",
        indexed: false,
        internalType: "uint128",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "File",
    inputs: [
      {
        name: "what",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "data",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "File",
    inputs: [
      {
        name: "what",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "factory",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "status",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LinkVault",
    inputs: [
      {
        name: "poolId",
        type: "uint64",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "scId",
        type: "bytes16",
        indexed: true,
        internalType: "ShareClassId",
      },
      {
        name: "asset",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "vault",
        type: "address",
        indexed: false,
        internalType: "contract IVault",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RegisterAsset",
    inputs: [
      {
        name: "assetId",
        type: "uint128",
        indexed: true,
        internalType: "AssetId",
      },
      {
        name: "asset",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "name",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "symbol",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "decimals",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
      {
        name: "isInitialization",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Rely",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetRequestManager",
    inputs: [
      {
        name: "poolId",
        type: "uint64",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "scId",
        type: "bytes16",
        indexed: true,
        internalType: "ShareClassId",
      },
      {
        name: "assetId",
        type: "uint128",
        indexed: true,
        internalType: "AssetId",
      },
      {
        name: "manager",
        type: "address",
        indexed: false,
        internalType: "contract IRequestManager",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TransferShares",
    inputs: [
      {
        name: "centrifugeId",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
      {
        name: "poolId",
        type: "uint64",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "scId",
        type: "bytes16",
        indexed: true,
        internalType: "ShareClassId",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "destinationAddress",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "amount",
        type: "uint128",
        indexed: false,
        internalType: "uint128",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UnlinkVault",
    inputs: [
      {
        name: "poolId",
        type: "uint64",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "scId",
        type: "bytes16",
        indexed: true,
        internalType: "ShareClassId",
      },
      {
        name: "asset",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "vault",
        type: "address",
        indexed: false,
        internalType: "contract IVault",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UpdateAssetPrice",
    inputs: [
      {
        name: "poolId",
        type: "uint64",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "scId",
        type: "bytes16",
        indexed: true,
        internalType: "ShareClassId",
      },
      {
        name: "asset",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "price",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "computedAt",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UpdateContract",
    inputs: [
      {
        name: "poolId",
        type: "uint64",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "scId",
        type: "bytes16",
        indexed: true,
        internalType: "ShareClassId",
      },
      {
        name: "target",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "payload",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UpdateMaxAssetPriceAge",
    inputs: [
      {
        name: "poolId",
        type: "uint64",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "scId",
        type: "bytes16",
        indexed: true,
        internalType: "ShareClassId",
      },
      {
        name: "asset",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "maxPriceAge",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UpdateMaxSharePriceAge",
    inputs: [
      {
        name: "poolId",
        type: "uint64",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "scId",
        type: "bytes16",
        indexed: true,
        internalType: "ShareClassId",
      },
      {
        name: "maxPriceAge",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UpdateSharePrice",
    inputs: [
      {
        name: "poolId",
        type: "uint64",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "scId",
        type: "bytes16",
        indexed: true,
        internalType: "ShareClassId",
      },
      {
        name: "price",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "computedAt",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  { type: "error", name: "AssetMissingDecimals", inputs: [] },
  { type: "error", name: "CannotSetOlderPrice", inputs: [] },
  { type: "error", name: "CrossChainTransferNotAllowed", inputs: [] },
  { type: "error", name: "FileUnrecognizedParam", inputs: [] },
  { type: "error", name: "InvalidFactory", inputs: [] },
  { type: "error", name: "InvalidHook", inputs: [] },
  { type: "error", name: "InvalidManager", inputs: [] },
  { type: "error", name: "InvalidPool", inputs: [] },
  { type: "error", name: "InvalidPrice", inputs: [] },
  { type: "error", name: "InvalidRequestManager", inputs: [] },
  { type: "error", name: "LocalTransferNotAllowed", inputs: [] },
  { type: "error", name: "MalformedVaultUpdateMessage", inputs: [] },
  { type: "error", name: "MoreThanZeroLinkedVaults", inputs: [] },
  { type: "error", name: "NoCode", inputs: [] },
  { type: "error", name: "NotAuthorized", inputs: [] },
  { type: "error", name: "OldHook", inputs: [] },
  { type: "error", name: "OldMetadata", inputs: [] },
  { type: "error", name: "PoolAlreadyAdded", inputs: [] },
  { type: "error", name: "RequestManagerNotSet", inputs: [] },
  { type: "error", name: "SafeTransferEthFailed", inputs: [] },
  { type: "error", name: "ShareClassAlreadyRegistered", inputs: [] },
  { type: "error", name: "ShareTokenDoesNotExist", inputs: [] },
  { type: "error", name: "ShareTokenTransferFailed", inputs: [] },
  { type: "error", name: "TooFewDecimals", inputs: [] },
  { type: "error", name: "TooManyDecimals", inputs: [] },
  { type: "error", name: "TransferFromFailed", inputs: [] },
  { type: "error", name: "UnauthorizedSender", inputs: [] },
  { type: "error", name: "UnknownAsset", inputs: [] },
  { type: "error", name: "UnknownToken", inputs: [] },
  { type: "error", name: "UnknownVault", inputs: [] },
  {
    type: "error",
    name: "WrappedError",
    inputs: [
      { name: "target", type: "address", internalType: "address" },
      { name: "selector", type: "bytes4", internalType: "bytes4" },
      { name: "reason", type: "bytes", internalType: "bytes" },
      { name: "details", type: "bytes", internalType: "bytes" },
    ],
  },
] as const;

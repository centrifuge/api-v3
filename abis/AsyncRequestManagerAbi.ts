export const AsyncRequestManagerAbi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "globalEscrow_",
        type: "address",
        internalType: "contract IEscrow",
      },
      { name: "root_", type: "address", internalType: "address" },
      { name: "deployer", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addVault",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "asset_", type: "address", internalType: "address" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "approvedDeposits",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
      { name: "assetAmount", type: "uint128", internalType: "uint128" },
      {
        name: "pricePoolPerAsset",
        type: "uint128",
        internalType: "D18",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceSheet",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IBalanceSheet",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "cancelDepositRequest",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "controller", type: "address", internalType: "address" },
      { name: "", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelRedeemRequest",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "controller", type: "address", internalType: "address" },
      { name: "", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimCancelDepositRequest",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "receiver", type: "address", internalType: "address" },
      { name: "controller", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "assets", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimCancelRedeemRequest",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "receiver", type: "address", internalType: "address" },
      { name: "controller", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "shares", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimableCancelDepositRequest",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "user", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "assets", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "claimableCancelRedeemRequest",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "user", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "shares", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "convertToAssets",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "shares", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "assets", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "convertToShares",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "assets", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "shares", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deny",
    inputs: [{ name: "user", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "assets", type: "uint256", internalType: "uint256" },
      { name: "receiver", type: "address", internalType: "address" },
      { name: "controller", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "shares", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "file",
    inputs: [
      { name: "what", type: "bytes32", internalType: "bytes32" },
      { name: "data", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "fulfillCancelDepositRequest",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "user", type: "address", internalType: "address" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
      { name: "assets", type: "uint128", internalType: "uint128" },
      { name: "fulfillment", type: "uint128", internalType: "uint128" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "fulfillCancelRedeemRequest",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "user", type: "address", internalType: "address" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
      { name: "shares", type: "uint128", internalType: "uint128" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "fulfillDepositRequest",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "user", type: "address", internalType: "address" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
      { name: "assets", type: "uint128", internalType: "uint128" },
      { name: "shares", type: "uint128", internalType: "uint128" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "fulfillRedeemRequest",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "user", type: "address", internalType: "address" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
      { name: "assets", type: "uint128", internalType: "uint128" },
      { name: "shares", type: "uint128", internalType: "uint128" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "globalEscrow",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IEscrow" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "investments",
    inputs: [
      {
        name: "vault",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "investor", type: "address", internalType: "address" },
    ],
    outputs: [
      { name: "maxMint", type: "uint128", internalType: "uint128" },
      { name: "maxWithdraw", type: "uint128", internalType: "uint128" },
      {
        name: "depositPrice",
        type: "uint256",
        internalType: "uint256",
      },
      { name: "redeemPrice", type: "uint256", internalType: "uint256" },
      {
        name: "pendingDepositRequest",
        type: "uint128",
        internalType: "uint128",
      },
      {
        name: "pendingRedeemRequest",
        type: "uint128",
        internalType: "uint128",
      },
      {
        name: "claimableCancelDepositRequest",
        type: "uint128",
        internalType: "uint128",
      },
      {
        name: "claimableCancelRedeemRequest",
        type: "uint128",
        internalType: "uint128",
      },
      {
        name: "pendingCancelDepositRequest",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "pendingCancelRedeemRequest",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "issuedShares",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "shareAmount", type: "uint128", internalType: "uint128" },
      {
        name: "pricePoolPerShare",
        type: "uint128",
        internalType: "D18",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "maxDeposit",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "user", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "assets", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "maxMint",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "user", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "shares", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "maxRedeem",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "user", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "shares", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "maxWithdraw",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "user", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "assets", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mint",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "shares", type: "uint256", internalType: "uint256" },
      { name: "receiver", type: "address", internalType: "address" },
      { name: "controller", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "assets", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "pendingCancelDepositRequest",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "user", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "isPending", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingCancelRedeemRequest",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "user", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "isPending", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingDepositRequest",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "user", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "assets", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingRedeemRequest",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "user", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "shares", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolEscrow",
    inputs: [{ name: "poolId", type: "uint64", internalType: "PoolId" }],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPoolEscrow",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolEscrowProvider",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPoolEscrowProvider",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPoolManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "priceLastUpdated",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
    ],
    outputs: [{ name: "lastUpdated", type: "uint64", internalType: "uint64" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "recoverTokens",
    inputs: [
      { name: "token", type: "address", internalType: "address" },
      { name: "receiver", type: "address", internalType: "address" },
      { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "recoverTokens",
    inputs: [
      { name: "token", type: "address", internalType: "address" },
      { name: "tokenId", type: "uint256", internalType: "uint256" },
      { name: "receiver", type: "address", internalType: "address" },
      { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "redeem",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "shares", type: "uint256", internalType: "uint256" },
      { name: "receiver", type: "address", internalType: "address" },
      { name: "controller", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "assets", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rely",
    inputs: [{ name: "user", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeVault",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "asset_", type: "address", internalType: "address" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestDeposit",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "assets", type: "uint256", internalType: "uint256" },
      { name: "controller", type: "address", internalType: "address" },
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestRedeem",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "shares", type: "uint256", internalType: "uint256" },
      { name: "controller", type: "address", internalType: "address" },
      { name: "owner", type: "address", internalType: "address" },
      { name: "", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "revokedShares",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
      { name: "assetAmount", type: "uint128", internalType: "uint128" },
      { name: "shareAmount", type: "uint128", internalType: "uint128" },
      {
        name: "pricePoolPerShare",
        type: "uint128",
        internalType: "D18",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "root",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "sender",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IVaultMessageSender",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "vault",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
    ],
    outputs: [
      {
        name: "vault",
        type: "address",
        internalType: "contract IAsyncVault",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "vaultByAssetId",
    inputs: [
      { name: "poolId", type: "uint64", internalType: "PoolId" },
      { name: "scId", type: "bytes16", internalType: "ShareClassId" },
      { name: "assetId", type: "uint128", internalType: "AssetId" },
    ],
    outputs: [
      { name: "", type: "address", internalType: "contract IBaseVault" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "vaultKind",
    inputs: [
      { name: "", type: "address", internalType: "contract IBaseVault" },
    ],
    outputs: [
      { name: "", type: "uint8", internalType: "enum VaultKind" },
      { name: "", type: "address", internalType: "address" },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "wards",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "vault_",
        type: "address",
        internalType: "contract IBaseVault",
      },
      { name: "assets", type: "uint256", internalType: "uint256" },
      { name: "receiver", type: "address", internalType: "address" },
      { name: "controller", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "shares", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Deny",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "File",
    inputs: [
      {
        name: "what",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "data",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Rely",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TriggerRedeemRequest",
    inputs: [
      {
        name: "poolId",
        type: "uint64",
        indexed: true,
        internalType: "uint64",
      },
      {
        name: "scId",
        type: "bytes16",
        indexed: true,
        internalType: "bytes16",
      },
      {
        name: "user",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "asset",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "shares",
        type: "uint128",
        indexed: false,
        internalType: "uint128",
      },
    ],
    anonymous: false,
  },
  { type: "error", name: "AssetMismatch", inputs: [] },
  { type: "error", name: "AssetNotAllowed", inputs: [] },
  { type: "error", name: "CancellationIsPending", inputs: [] },
  { type: "error", name: "ExceedsDepositLimits", inputs: [] },
  { type: "error", name: "ExceedsMaxDeposit", inputs: [] },
  { type: "error", name: "ExceedsMaxRedeem", inputs: [] },
  { type: "error", name: "ExceedsRedeemLimits", inputs: [] },
  { type: "error", name: "FailedRedeemRequest", inputs: [] },
  { type: "error", name: "FileUnrecognizedParam", inputs: [] },
  { type: "error", name: "MulDiv_Overflow", inputs: [] },
  { type: "error", name: "NoCode", inputs: [] },
  { type: "error", name: "NoPendingRequest", inputs: [] },
  { type: "error", name: "NotAuthorized", inputs: [] },
  { type: "error", name: "SafeTransferEthFailed", inputs: [] },
  { type: "error", name: "SafeTransferFailed", inputs: [] },
  { type: "error", name: "SenderNotVault", inputs: [] },
  { type: "error", name: "ShareTokenAmountIsZero", inputs: [] },
  { type: "error", name: "ShareTokenTransferFailed", inputs: [] },
  { type: "error", name: "TransferNotAllowed", inputs: [] },
  { type: "error", name: "Uint128_Overflow", inputs: [] },
  { type: "error", name: "VaultAlreadyExists", inputs: [] },
  { type: "error", name: "VaultDoesNotExist", inputs: [] },
  { type: "error", name: "ZeroAmountNotAllowed", inputs: [] },
] as const;

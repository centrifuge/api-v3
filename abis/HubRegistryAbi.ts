export const HubRegistryAbi = [
  {
    type: "constructor",
    inputs: [{ name: "deployer", type: "address", internalType: "address" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "currency",
    inputs: [{ name: "", type: "uint64", internalType: "PoolId" }],
    outputs: [{ name: "", type: "uint128", internalType: "AssetId" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [{ name: "assetId", type: "uint128", internalType: "AssetId" }],
    outputs: [{ name: "decimals_", type: "uint8", internalType: "uint8" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [{ name: "asset_", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "decimals_", type: "uint8", internalType: "uint8" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [{ name: "poolId_", type: "uint64", internalType: "PoolId" }],
    outputs: [{ name: "decimals_", type: "uint8", internalType: "uint8" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deny",
    inputs: [{ name: "user", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "dependency",
    inputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "exists",
    inputs: [{ name: "poolId_", type: "uint64", internalType: "PoolId" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isRegistered",
    inputs: [{ name: "assetId", type: "uint128", internalType: "AssetId" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "manager",
    inputs: [
      { name: "", type: "uint64", internalType: "PoolId" },
      { name: "", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "metadata",
    inputs: [{ name: "", type: "uint64", internalType: "PoolId" }],
    outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolId",
    inputs: [
      { name: "centrifugeId", type: "uint16", internalType: "uint16" },
      { name: "postfix", type: "uint48", internalType: "uint48" },
    ],
    outputs: [{ name: "poolId_", type: "uint64", internalType: "PoolId" }],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "registerAsset",
    inputs: [
      { name: "assetId", type: "uint128", internalType: "AssetId" },
      { name: "decimals_", type: "uint8", internalType: "uint8" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "registerPool",
    inputs: [
      { name: "poolId_", type: "uint64", internalType: "PoolId" },
      { name: "manager_", type: "address", internalType: "address" },
      { name: "currency_", type: "uint128", internalType: "AssetId" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rely",
    inputs: [{ name: "user", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setMetadata",
    inputs: [
      { name: "poolId_", type: "uint64", internalType: "PoolId" },
      { name: "metadata_", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateCurrency",
    inputs: [
      { name: "poolId_", type: "uint64", internalType: "PoolId" },
      { name: "currency_", type: "uint128", internalType: "AssetId" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateDependency",
    inputs: [
      { name: "what", type: "bytes32", internalType: "bytes32" },
      { name: "dependency_", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateManager",
    inputs: [
      { name: "poolId_", type: "uint64", internalType: "PoolId" },
      { name: "manager_", type: "address", internalType: "address" },
      { name: "canManage", type: "bool", internalType: "bool" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "wards",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Deny",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewAsset",
    inputs: [
      {
        name: "assetId",
        type: "uint128",
        indexed: true,
        internalType: "AssetId",
      },
      {
        name: "decimals",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewPool",
    inputs: [
      {
        name: "poolId",
        type: "uint64",
        indexed: false,
        internalType: "PoolId",
      },
      {
        name: "manager",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "currency",
        type: "uint128",
        indexed: true,
        internalType: "AssetId",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Rely",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetMetadata",
    inputs: [
      {
        name: "poolId",
        type: "uint64",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "metadata",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UpdateCurrency",
    inputs: [
      {
        name: "poolId",
        type: "uint64",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "currency",
        type: "uint128",
        indexed: false,
        internalType: "AssetId",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UpdateDependency",
    inputs: [
      {
        name: "what",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "dependency",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UpdateManager",
    inputs: [
      {
        name: "poolId",
        type: "uint64",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "manager",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "canManage",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  { type: "error", name: "AssetAlreadyRegistered", inputs: [] },
  { type: "error", name: "AssetNotFound", inputs: [] },
  { type: "error", name: "EmptyAccount", inputs: [] },
  { type: "error", name: "EmptyCurrency", inputs: [] },
  { type: "error", name: "EmptyShareClassManager", inputs: [] },
  {
    type: "error",
    name: "NonExistingPool",
    inputs: [{ name: "id", type: "uint64", internalType: "PoolId" }],
  },
  { type: "error", name: "NotAuthorized", inputs: [] },
  { type: "error", name: "PoolAlreadyRegistered", inputs: [] },
  { type: "error", name: "Uint128_Overflow", inputs: [] },
] as const;

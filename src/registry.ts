/**
 * Registry module that provides compile-time generated registry data
 * 
 * This module provides synchronous access to the registry data that was
 * fetched at build time. The registry data is generated by running:
 * `pnpm update-registry`
 */

import { registry } from './registry.generated'
import type { RegistryChain, RegistryAbis, Registry } from './registry.types'

export type { RegistryChain, RegistryAbis, Registry }

/**
 * Gets the chains from the registry for the specified environment
 * Filters by SELECTED_NETWORKS if provided (comma-separated chain IDs)
 */
export function getChains(): RegistryChain[] {
  const environment = process.env.ENVIRONMENT || "mainnet";
  
  if (environment !== "mainnet" && environment !== "testnet") {
    throw new Error(`Invalid ENVIRONMENT: ${environment}. Must be 'mainnet' or 'testnet'`);
  }
  
  const chains = registry.chains[environment];
  let chainList = Object.values(chains);
  
  // Filter by SELECTED_NETWORKS if provided
  const selectedNetworks = process.env.SELECTED_NETWORKS;
  if (selectedNetworks) {
    const selectedChainIds = selectedNetworks.split(",").map(id => parseInt(id.trim()));
    chainList = chainList.filter(chain => selectedChainIds.includes(chain.network.chainId));
  }
  
  return chainList;
}

/**
 * Gets a specific ABI from the registry
 */
export function getAbi(contractName: string): any[] {
  const abi = registry.abis[contractName];
  
  if (!abi) {
    throw new Error(`ABI not found in registry: ${contractName}`);
  }
  
  return abi;
}

/**
 * Gets all ABIs from the registry
 */
export function getAllAbis(): RegistryAbis {
  return registry.abis;
}
